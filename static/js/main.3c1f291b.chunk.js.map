{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/ScoreBoard/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","clickCard","id","alt","name","src","image","Wrapper","children","Title","ScoreBoard","current","high","currentScore","highestScore","guessedCards","gameOver","App","state","friends","includes","_this","setState","push","_this2","this","array","i","length","j","Math","floor","random","temp","shuffleArray","components_Wrapper","components_Title","components_ScoreBoard","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"gmCAgBeA,MAbf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,UAAUN,EAAMO,MACzDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCA1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCK1BC,MANf,SAAed,GACb,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,wBCIlBE,MANf,SAAoBf,GAClB,OACEC,EAAAC,EAAAC,cAAA,4BAAoBH,EAAMgB,QAA1B,qBAAqDhB,EAAMiB,OCE3DC,EAAe,EACfC,EAAe,EACfC,EAAe,GACfC,GAAW,MAkEAC,6MAlDbC,MAAQ,CACNC,aAGFlB,UAAY,SAAAC,GACPa,EAAaK,SAASlB,IACpBW,EAAeC,IAChBE,GAAW,EACXF,EAAeD,GAEjBG,GAAW,EACXH,EAAe,EACfE,EAAe,GACfM,EAAKC,SAAS,CAAEH,cAEhBJ,EAAaQ,KAAKrB,GAClBW,IACAQ,EAAKC,SAAS,CAAEH,sFAKX,IAAAK,EAAAC,KAEP,OADAA,KAAKP,MAAMC,QApCf,SAAsBO,GAEpB,IADA,IAAIC,EAAID,EAAME,OAAS,EAChBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,EA4BgBQ,CAAaT,KAAKP,MAAMC,SAE3CvB,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,mBACGpB,EAAY,YACXpB,EAAAC,EAAAC,cAACuC,EAAD,CACE1B,QAASE,EACTD,KAAME,KAIXW,KAAKP,MAAMC,QAAQmB,IAAI,SAAAC,GAAM,OAC5B3C,EAAAC,EAAAC,cAAC0C,EAAD,CACEvC,UAAWuB,EAAKvB,UAChBC,GAAIqC,EAAOrC,GACXuC,IAAKF,EAAOrC,GACZE,KAAMmC,EAAOnC,KACbE,MAAOiC,EAAOjC,kBA1CRoC,mBCnBlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3c1f291b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.clickCard(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <h1 className=\"title\">{props.children}</h1>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ScoreBoard(props) {\r\n  return (\r\n    <h6>Current Score: {props.current} | Highest Score: {props.high}</h6>\r\n  );\r\n}\r\n\r\nexport default ScoreBoard;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport ScoreBoard from \"./components/ScoreBoard\";\n\nlet currentScore = 0;\nlet highestScore = 0;\nlet guessedCards = [];\nlet gameOver = false;\n\n// Function used to take array of cards, shuffle, and return altered array\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  clickCard = id => {\n    if(guessedCards.includes(id)){\n      if(currentScore > highestScore){\n        gameOver = true;\n        highestScore = currentScore;\n      }\n      gameOver = false;\n      currentScore = 0;\n      guessedCards = [];\n      this.setState({ friends });\n    } else {\n      guessedCards.push(id);\n      currentScore++;\n      this.setState({ friends });\n    }\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    this.state.friends = shuffleArray(this.state.friends);\n    return (\n      <Wrapper>\n        <Title>Clicky Game\n          {gameOver ? ('You Suck!') : (\n            <ScoreBoard\n              current={currentScore}\n              high={highestScore}\n            />\n          )}\n        </Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickCard={this.clickCard}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            // occupation={friend.occupation}\n            // location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}